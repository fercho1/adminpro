{"version":3,"file":"check-box.js","sources":["check-box.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    forwardRef,\r\n    HostListener\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport DxCheckBox from 'devextreme/ui/check_box';\r\n\r\nimport {\r\n    ControlValueAccessor,\r\n    NG_VALUE_ACCESSOR\r\n} from '@angular/forms';\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxCheckBoxComponent),\r\n    multi: true\r\n};\r\n\r\n/**\r\n * The CheckBox is a small box, which when selected by the end user, shows that a particular feature has been enabled or a specific option has been chosen.\r\n */\r\n@Component({\r\n    selector: 'dx-check-box',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n        NestedOptionHost\r\n    ]\r\n})\r\nexport class DxCheckBoxComponent extends DxComponent implements OnDestroy, ControlValueAccessor {\r\n    instance: DxCheckBox;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the editor's value is valid.\r\n     */\r\n    @Input()\r\n    get isValid(): boolean {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value: boolean) {\r\n        this._setOption('isValid', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n     */\r\n    @Input()\r\n    get name(): string {\r\n        return this._getOption('name');\r\n    }\r\n    set name(value: string) {\r\n        this._setOption('name', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the editor is read-only.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the text displayed by the check box.\r\n     */\r\n    @Input()\r\n    get text(): string {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value: string) {\r\n        this._setOption('text', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies information on the validation error when using a custom validation engine. Should be changed at runtime along with the isValid option.\r\n     */\r\n    @Input()\r\n    get validationError(): any {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value: any) {\r\n        this._setOption('validationError', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor's value is displayed.\r\n     */\r\n    @Input()\r\n    get validationMessageMode(): string {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value: string) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget state.\r\n     */\r\n    @Input()\r\n    get value(): boolean {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value: boolean) {\r\n        this._setOption('value', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget's value is changed.\r\n     */\r\n    @Output() onValueChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() isValidChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() nameChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() textChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationErrorChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationMessageModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n    @Output() onBlur: EventEmitter<any>;\r\n\r\n\r\n    @HostListener('valueChange', ['$event']) change(_) { }\r\n    @HostListener('onBlur', ['$event']) touched = (_) => {};\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            _watcherHelper: WatcherHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxCheckBox(element, options);\r\n    }\r\n\r\n\r\n    writeValue(value: any): void {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void): void { this.change = fn; }\r\n    registerOnTouched(fn: () => void): void { this.touched = fn; }\r\n\r\n    _createWidget(element: any) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxCheckBoxComponent\r\n  ],\r\n  exports: [\r\n    DxCheckBoxComponent,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxCheckBoxModule { }\r\n"]}