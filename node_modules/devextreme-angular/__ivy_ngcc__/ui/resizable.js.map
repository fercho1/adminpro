{"version":3,"file":"resizable.js","sources":["resizable.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter\r\n} from '@angular/core';\r\n\r\n\r\n\r\nimport DxResizable from 'devextreme/ui/resizable';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * The Resizable widget enables its content to be resizable in the UI.\r\n */\r\n@Component({\r\n    selector: 'dx-resizable',\r\n    template: '<ng-content></ng-content>',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost\r\n    ]\r\n})\r\nexport class DxResizableComponent extends DxComponent implements OnDestroy {\r\n    instance: DxResizable;\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which borders of the widget element are used as a handle.\r\n     */\r\n    @Input()\r\n    get handles(): string {\r\n        return this._getOption('handles');\r\n    }\r\n    set handles(value: string) {\r\n        this._setOption('handles', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the upper height boundary for resizing.\r\n     */\r\n    @Input()\r\n    get maxHeight(): number {\r\n        return this._getOption('maxHeight');\r\n    }\r\n    set maxHeight(value: number) {\r\n        this._setOption('maxHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the upper width boundary for resizing.\r\n     */\r\n    @Input()\r\n    get maxWidth(): number {\r\n        return this._getOption('maxWidth');\r\n    }\r\n    set maxWidth(value: number) {\r\n        this._setOption('maxWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the lower height boundary for resizing.\r\n     */\r\n    @Input()\r\n    get minHeight(): number {\r\n        return this._getOption('minHeight');\r\n    }\r\n    set minHeight(value: number) {\r\n        this._setOption('minHeight', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the lower width boundary for resizing.\r\n     */\r\n    @Input()\r\n    get minWidth(): number {\r\n        return this._getOption('minWidth');\r\n    }\r\n    set minWidth(value: number) {\r\n        this._setOption('minWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed each time the widget is resized by one pixel.\r\n     */\r\n    @Output() onResize: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when resizing ends.\r\n     */\r\n    @Output() onResizeEnd: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when resizing starts.\r\n     */\r\n    @Output() onResizeStart: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() handlesChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxHeightChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minHeightChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            _watcherHelper: WatcherHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'resize', emit: 'onResize' },\r\n            { subscribe: 'resizeEnd', emit: 'onResizeEnd' },\r\n            { subscribe: 'resizeStart', emit: 'onResizeStart' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'handlesChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'maxHeightChange' },\r\n            { emit: 'maxWidthChange' },\r\n            { emit: 'minHeightChange' },\r\n            { emit: 'minWidthChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxResizable(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxResizableComponent\r\n  ],\r\n  exports: [\r\n    DxResizableComponent,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxResizableModule { }\r\n"]}