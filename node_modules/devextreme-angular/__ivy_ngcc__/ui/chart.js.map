{"version":3,"file":"chart.js","sources":["chart.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxChart from 'devextreme/viz/chart';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoAdaptiveLayoutModule } from './nested/adaptive-layout';\r\nimport { DxoAnimationModule } from './nested/animation';\r\nimport { DxiAnnotationModule } from './nested/annotation-dxi';\r\nimport { DxoBorderModule } from './nested/border';\r\nimport { DxoFontModule } from './nested/font';\r\nimport { DxoImageModule } from './nested/image';\r\nimport { DxoShadowModule } from './nested/shadow';\r\nimport { DxoArgumentAxisModule } from './nested/argument-axis';\r\nimport { DxoAggregationIntervalModule } from './nested/aggregation-interval';\r\nimport { DxiBreakModule } from './nested/break-dxi';\r\nimport { DxoBreakStyleModule } from './nested/break-style';\r\nimport { DxiConstantLineModule } from './nested/constant-line-dxi';\r\nimport { DxoLabelModule } from './nested/label';\r\nimport { DxoConstantLineStyleModule } from './nested/constant-line-style';\r\nimport { DxoGridModule } from './nested/grid';\r\nimport { DxoFormatModule } from './nested/format';\r\nimport { DxoMinorGridModule } from './nested/minor-grid';\r\nimport { DxoMinorTickModule } from './nested/minor-tick';\r\nimport { DxoMinorTickIntervalModule } from './nested/minor-tick-interval';\r\nimport { DxoMinVisualRangeLengthModule } from './nested/min-visual-range-length';\r\nimport { DxiStripModule } from './nested/strip-dxi';\r\nimport { DxoStripStyleModule } from './nested/strip-style';\r\nimport { DxoTickModule } from './nested/tick';\r\nimport { DxoTickIntervalModule } from './nested/tick-interval';\r\nimport { DxoTitleModule } from './nested/title';\r\nimport { DxoCommonAnnotationSettingsModule } from './nested/common-annotation-settings';\r\nimport { DxoCommonAxisSettingsModule } from './nested/common-axis-settings';\r\nimport { DxoCommonPaneSettingsModule } from './nested/common-pane-settings';\r\nimport { DxoCommonSeriesSettingsModule } from './nested/common-series-settings';\r\nimport { DxoAggregationModule } from './nested/aggregation';\r\nimport { DxoAreaModule } from './nested/area';\r\nimport { DxoHoverStyleModule } from './nested/hover-style';\r\nimport { DxoHatchingModule } from './nested/hatching';\r\nimport { DxoConnectorModule } from './nested/connector';\r\nimport { DxoPointModule } from './nested/point';\r\nimport { DxoHeightModule } from './nested/height';\r\nimport { DxoUrlModule } from './nested/url';\r\nimport { DxoWidthModule } from './nested/width';\r\nimport { DxoSelectionStyleModule } from './nested/selection-style';\r\nimport { DxoReductionModule } from './nested/reduction';\r\nimport { DxoValueErrorBarModule } from './nested/value-error-bar';\r\nimport { DxoBarModule } from './nested/bar';\r\nimport { DxoBubbleModule } from './nested/bubble';\r\nimport { DxoCandlestickModule } from './nested/candlestick';\r\nimport { DxoFullstackedareaModule } from './nested/fullstackedarea';\r\nimport { DxoFullstackedbarModule } from './nested/fullstackedbar';\r\nimport { DxoFullstackedlineModule } from './nested/fullstackedline';\r\nimport { DxoFullstackedsplineModule } from './nested/fullstackedspline';\r\nimport { DxoFullstackedsplineareaModule } from './nested/fullstackedsplinearea';\r\nimport { DxoArgumentFormatModule } from './nested/argument-format';\r\nimport { DxoLineModule } from './nested/line';\r\nimport { DxoRangeareaModule } from './nested/rangearea';\r\nimport { DxoRangebarModule } from './nested/rangebar';\r\nimport { DxoScatterModule } from './nested/scatter';\r\nimport { DxoSplineModule } from './nested/spline';\r\nimport { DxoSplineareaModule } from './nested/splinearea';\r\nimport { DxoStackedareaModule } from './nested/stackedarea';\r\nimport { DxoStackedbarModule } from './nested/stackedbar';\r\nimport { DxoStackedlineModule } from './nested/stackedline';\r\nimport { DxoStackedsplineModule } from './nested/stackedspline';\r\nimport { DxoStackedsplineareaModule } from './nested/stackedsplinearea';\r\nimport { DxoStepareaModule } from './nested/steparea';\r\nimport { DxoSteplineModule } from './nested/stepline';\r\nimport { DxoStockModule } from './nested/stock';\r\nimport { DxoCrosshairModule } from './nested/crosshair';\r\nimport { DxoHorizontalLineModule } from './nested/horizontal-line';\r\nimport { DxoVerticalLineModule } from './nested/vertical-line';\r\nimport { DxoDataPrepareSettingsModule } from './nested/data-prepare-settings';\r\nimport { DxoExportModule } from './nested/export';\r\nimport { DxoLegendModule } from './nested/legend';\r\nimport { DxoMarginModule } from './nested/margin';\r\nimport { DxoSubtitleModule } from './nested/subtitle';\r\nimport { DxoLoadingIndicatorModule } from './nested/loading-indicator';\r\nimport { DxiPaneModule } from './nested/pane-dxi';\r\nimport { DxoScrollBarModule } from './nested/scroll-bar';\r\nimport { DxiSeriesModule } from './nested/series-dxi';\r\nimport { DxoSeriesTemplateModule } from './nested/series-template';\r\nimport { DxoSizeModule } from './nested/size';\r\nimport { DxoTooltipModule } from './nested/tooltip';\r\nimport { DxiValueAxisModule } from './nested/value-axis-dxi';\r\nimport { DxoZoomAndPanModule } from './nested/zoom-and-pan';\r\nimport { DxoDragBoxStyleModule } from './nested/drag-box-style';\r\n\r\nimport { DxiAnnotationComponent } from './nested/annotation-dxi';\r\nimport { DxiPaneComponent } from './nested/pane-dxi';\r\nimport { DxiSeriesComponent } from './nested/series-dxi';\r\nimport { DxiValueAxisComponent } from './nested/value-axis-dxi';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Chart is a widget that visualizes data from a local or remote storage using a great variety of series types along with different interactive elements, such as tooltips, crosshair pointer, legend, etc.\r\n */\r\n@Component({\r\n    selector: 'dx-chart',\r\n    template: '',\r\n    styles: [ ' :host {  display: block; }'],\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxChartComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxChart;\r\n\r\n    /**\r\n     * Specifies adaptive layout options.\r\n     */\r\n    @Input()\r\n    get adaptiveLayout(): { height?: number, keepLabels?: boolean, width?: number } {\r\n        return this._getOption('adaptiveLayout');\r\n    }\r\n    set adaptiveLayout(value: { height?: number, keepLabels?: boolean, width?: number }) {\r\n        this._setOption('adaptiveLayout', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to adjust the value axis's visualRange when the argument axis is being zoomed or panned.\r\n     */\r\n    @Input()\r\n    get adjustOnZoom(): boolean {\r\n        return this._getOption('adjustOnZoom');\r\n    }\r\n    set adjustOnZoom(value: boolean) {\r\n        this._setOption('adjustOnZoom', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies animation options.\r\n     */\r\n    @Input()\r\n    get animation(): boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number } {\r\n        return this._getOption('animation');\r\n    }\r\n    set animation(value: boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }) {\r\n        this._setOption('animation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the annotation collection.\r\n     */\r\n    @Input()\r\n    get annotations(): Array<DevExpress.viz.dxChartAnnotationConfig | any> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotations(value: Array<DevExpress.viz.dxChartAnnotationConfig | any>) {\r\n        this._setOption('annotations', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the argument axis.\r\n     */\r\n    @Input()\r\n    get argumentAxis(): { aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> } {\r\n        return this._getOption('argumentAxis');\r\n    }\r\n    set argumentAxis(value: { aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> }) {\r\n        this._setOption('argumentAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to hide series point markers automatically to reduce visual clutter.\r\n     */\r\n    @Input()\r\n    get autoHidePointMarkers(): boolean {\r\n        return this._getOption('autoHidePointMarkers');\r\n    }\r\n    set autoHidePointMarkers(value: boolean) {\r\n        this._setOption('autoHidePointMarkers', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Controls the padding and consequently the width of a group of bars with the same argument using relative units. Ignored if the barGroupWidth option is set.\r\n     */\r\n    @Input()\r\n    get barGroupPadding(): number {\r\n        return this._getOption('barGroupPadding');\r\n    }\r\n    set barGroupPadding(value: number) {\r\n        this._setOption('barGroupPadding', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a fixed width for groups of bars with the same argument, measured in pixels. Takes precedence over the barGroupPadding option.\r\n     */\r\n    @Input()\r\n    get barGroupWidth(): number {\r\n        return this._getOption('barGroupWidth');\r\n    }\r\n    set barGroupWidth(value: number) {\r\n        this._setOption('barGroupWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonSeries.barPadding instead.\r\n     */\r\n    @Input()\r\n    get barWidth(): number {\r\n        return this._getOption('barWidth');\r\n    }\r\n    set barWidth(value: number) {\r\n        this._setOption('barWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies settings common for all annotations in the chart.\r\n     */\r\n    @Input()\r\n    get commonAnnotationSettings(): DevExpress.viz.dxChartCommonAnnotationConfig {\r\n        return this._getOption('commonAnnotationSettings');\r\n    }\r\n    set commonAnnotationSettings(value: DevExpress.viz.dxChartCommonAnnotationConfig) {\r\n        this._setOption('commonAnnotationSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines common settings for both the argument and value axis in a chart.\r\n     */\r\n    @Input()\r\n    get commonAxisSettings(): { allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: DevExpress.viz.Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number } {\r\n        return this._getOption('commonAxisSettings');\r\n    }\r\n    set commonAxisSettings(value: { allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: DevExpress.viz.Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number }) {\r\n        this._setOption('commonAxisSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines common settings for all panes in a chart.\r\n     */\r\n    @Input()\r\n    get commonPaneSettings(): { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } } {\r\n        return this._getOption('commonPaneSettings');\r\n    }\r\n    set commonPaneSettings(value: { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } }) {\r\n        this._setOption('commonPaneSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies settings common for all series in the chart.\r\n     */\r\n    @Input()\r\n    get commonSeriesSettings(): any {\r\n        return this._getOption('commonSeriesSettings');\r\n    }\r\n    set commonSeriesSettings(value: any) {\r\n        this._setOption('commonSeriesSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Colors the background of the chart container.\r\n     */\r\n    @Input()\r\n    get containerBackgroundColor(): string {\r\n        return this._getOption('containerBackgroundColor');\r\n    }\r\n    set containerBackgroundColor(value: string) {\r\n        this._setOption('containerBackgroundColor', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the crosshair feature.\r\n     */\r\n    @Input()\r\n    get crosshair(): { color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number } {\r\n        return this._getOption('crosshair');\r\n    }\r\n    set crosshair(value: { color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number }) {\r\n        this._setOption('crosshair', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes an individual annotation.\r\n     */\r\n    @Input()\r\n    get customizeAnnotation(): Function {\r\n        return this._getOption('customizeAnnotation');\r\n    }\r\n    set customizeAnnotation(value: Function) {\r\n        this._setOption('customizeAnnotation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual point label.\r\n     */\r\n    @Input()\r\n    get customizeLabel(): Function {\r\n        return this._getOption('customizeLabel');\r\n    }\r\n    set customizeLabel(value: Function) {\r\n        this._setOption('customizeLabel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes the appearance of an individual series point.\r\n     */\r\n    @Input()\r\n    get customizePoint(): Function {\r\n        return this._getOption('customizePoint');\r\n    }\r\n    set customizePoint(value: Function) {\r\n        this._setOption('customizePoint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Processes data before visualizing it.\r\n     */\r\n    @Input()\r\n    get dataPrepareSettings(): { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function } {\r\n        return this._getOption('dataPrepareSettings');\r\n    }\r\n    set dataPrepareSettings(value: { checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }) {\r\n        this._setOption('dataPrepareSettings', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Binds the widget to data.\r\n     */\r\n    @Input()\r\n    get dataSource(): DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any> {\r\n        return this._getOption('dataSource');\r\n    }\r\n    set dataSource(value: DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>) {\r\n        this._setOption('dataSource', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies which pane should be used by default.\r\n     */\r\n    @Input()\r\n    get defaultPane(): string {\r\n        return this._getOption('defaultPane');\r\n    }\r\n    set defaultPane(value: string) {\r\n        this._setOption('defaultPane', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to the user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonSeries.ignoreEmptyPoints instead.\r\n     */\r\n    @Input()\r\n    get equalBarWidth(): boolean {\r\n        return this._getOption('equalBarWidth');\r\n    }\r\n    set equalBarWidth(value: boolean) {\r\n        this._setOption('equalBarWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the exporting and printing features.\r\n     */\r\n    @Input()\r\n    get export(): { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string } {\r\n        return this._getOption('export');\r\n    }\r\n    set export(value: { backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }) {\r\n        this._setOption('export', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the options of a chart's legend.\r\n     */\r\n    @Input()\r\n    get legend(): { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean } {\r\n        return this._getOption('legend');\r\n    }\r\n    set legend(value: { backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }) {\r\n        this._setOption('legend', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the loading indicator.\r\n     */\r\n    @Input()\r\n    get loadingIndicator(): { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string } {\r\n        return this._getOption('loadingIndicator');\r\n    }\r\n    set loadingIndicator(value: { backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }) {\r\n        this._setOption('loadingIndicator', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Generates space around the widget.\r\n     */\r\n    @Input()\r\n    get margin(): { bottom?: number, left?: number, right?: number, top?: number } {\r\n        return this._getOption('margin');\r\n    }\r\n    set margin(value: { bottom?: number, left?: number, right?: number, top?: number }) {\r\n        this._setOption('margin', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a coefficient determining the diameter of the largest bubble.\r\n     */\r\n    @Input()\r\n    get maxBubbleSize(): number {\r\n        return this._getOption('maxBubbleSize');\r\n    }\r\n    set maxBubbleSize(value: number) {\r\n        this._setOption('maxBubbleSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the diameter of the smallest bubble measured in pixels.\r\n     */\r\n    @Input()\r\n    get minBubbleSize(): number {\r\n        return this._getOption('minBubbleSize');\r\n    }\r\n    set minBubbleSize(value: number) {\r\n        this._setOption('minBubbleSize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Forces the widget to treat negative values as zeroes. Applies to stacked-like series only.\r\n     */\r\n    @Input()\r\n    get negativesAsZeroes(): boolean {\r\n        return this._getOption('negativesAsZeroes');\r\n    }\r\n    set negativesAsZeroes(value: boolean) {\r\n        this._setOption('negativesAsZeroes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the palette to be used for colorizing series and their elements.\r\n     */\r\n    @Input()\r\n    get palette(): string | Array<string> {\r\n        return this._getOption('palette');\r\n    }\r\n    set palette(value: string | Array<string>) {\r\n        this._setOption('palette', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies what to do with colors in the palette when their number is less than the number of series (in the Chart widget) or points in a series (in the PieChart widget).\r\n     */\r\n    @Input()\r\n    get paletteExtensionMode(): string {\r\n        return this._getOption('paletteExtensionMode');\r\n    }\r\n    set paletteExtensionMode(value: string) {\r\n        this._setOption('paletteExtensionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Declares a collection of panes.\r\n     */\r\n    @Input()\r\n    get panes(): Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, name?: string }> {\r\n        return this._getOption('panes');\r\n    }\r\n    set panes(value: Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, name?: string }>) {\r\n        this._setOption('panes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Notifies the widget that it is embedded into an HTML page that uses a tag modifying the path.\r\n     */\r\n    @Input()\r\n    get pathModified(): boolean {\r\n        return this._getOption('pathModified');\r\n    }\r\n    set pathModified(value: boolean) {\r\n        this._setOption('pathModified', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single point or multiple points can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get pointSelectionMode(): string {\r\n        return this._getOption('pointSelectionMode');\r\n    }\r\n    set pointSelectionMode(value: string) {\r\n        this._setOption('pointSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether to redraw the widget when the size of the parent browser window changes or a mobile device rotates.\r\n     */\r\n    @Input()\r\n    get redrawOnResize(): boolean {\r\n        return this._getOption('redrawOnResize');\r\n    }\r\n    set redrawOnResize(value: boolean) {\r\n        this._setOption('redrawOnResize', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies how the chart must behave when series point labels overlap.\r\n     */\r\n    @Input()\r\n    get resolveLabelOverlapping(): string {\r\n        return this._getOption('resolveLabelOverlapping');\r\n    }\r\n    set resolveLabelOverlapping(value: string) {\r\n        this._setOption('resolveLabelOverlapping', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Swaps the axes around making the value axis horizontal and the argument axis vertical.\r\n     */\r\n    @Input()\r\n    get rotated(): boolean {\r\n        return this._getOption('rotated');\r\n    }\r\n    set rotated(value: boolean) {\r\n        this._setOption('rotated', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the settings of the scroll bar.\r\n     */\r\n    @Input()\r\n    get scrollBar(): { color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number } {\r\n        return this._getOption('scrollBar');\r\n    }\r\n    set scrollBar(value: { color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number }) {\r\n        this._setOption('scrollBar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the zoomAndPan option instead.\r\n     */\r\n    @Input()\r\n    get scrollingMode(): string {\r\n        return this._getOption('scrollingMode');\r\n    }\r\n    set scrollingMode(value: string) {\r\n        this._setOption('scrollingMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies options for Chart widget series.\r\n     */\r\n    @Input()\r\n    get series(): any | Array<any> {\r\n        return this._getOption('series');\r\n    }\r\n    set series(value: any | Array<any>) {\r\n        this._setOption('series', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a single series or multiple series can be selected in the chart.\r\n     */\r\n    @Input()\r\n    get seriesSelectionMode(): string {\r\n        return this._getOption('seriesSelectionMode');\r\n    }\r\n    set seriesSelectionMode(value: string) {\r\n        this._setOption('seriesSelectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Defines options for the series template.\r\n     */\r\n    @Input()\r\n    get seriesTemplate(): { customizeSeries?: Function, nameField?: string } {\r\n        return this._getOption('seriesTemplate');\r\n    }\r\n    set seriesTemplate(value: { customizeSeries?: Function, nameField?: string }) {\r\n        this._setOption('seriesTemplate', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's size in pixels.\r\n     */\r\n    @Input()\r\n    get size(): { height?: number, width?: number } {\r\n        return this._getOption('size');\r\n    }\r\n    set size(value: { height?: number, width?: number }) {\r\n        this._setOption('size', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a point should remain in the hover state when the mouse pointer moves away.\r\n     */\r\n    @Input()\r\n    get stickyHovering(): boolean {\r\n        return this._getOption('stickyHovering');\r\n    }\r\n    set stickyHovering(value: boolean) {\r\n        this._setOption('stickyHovering', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Indicates whether or not to synchronize value axes when they are displayed on a single pane.\r\n     */\r\n    @Input()\r\n    get synchronizeMultiAxes(): boolean {\r\n        return this._getOption('synchronizeMultiAxes');\r\n    }\r\n    set synchronizeMultiAxes(value: boolean) {\r\n        this._setOption('synchronizeMultiAxes', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets the name of the theme the widget uses.\r\n     */\r\n    @Input()\r\n    get theme(): string {\r\n        return this._getOption('theme');\r\n    }\r\n    set theme(value: string) {\r\n        this._setOption('theme', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the widget's title.\r\n     */\r\n    @Input()\r\n    get title(): string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string } {\r\n        return this._getOption('title');\r\n    }\r\n    set title(value: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }) {\r\n        this._setOption('title', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures tooltips.\r\n     */\r\n    @Input()\r\n    get tooltip(): { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number } {\r\n        return this._getOption('tooltip');\r\n    }\r\n    set tooltip(value: { argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }) {\r\n        this._setOption('tooltip', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use CommonSeries.aggregation.enabled instead.\r\n     */\r\n    @Input()\r\n    get useAggregation(): boolean {\r\n        return this._getOption('useAggregation');\r\n    }\r\n    set useAggregation(value: boolean) {\r\n        this._setOption('useAggregation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the value axis.\r\n     */\r\n    @Input()\r\n    get valueAxis(): Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxAutoBreakCount?: number, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }> {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxis(value: Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxAutoBreakCount?: number, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }>) {\r\n        this._setOption('valueAxis', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures zooming and panning.\r\n     */\r\n    @Input()\r\n    get zoomAndPan(): { allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string } {\r\n        return this._getOption('zoomAndPan');\r\n    }\r\n    set zoomAndPan(value: { allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string }) {\r\n        this._setOption('zoomAndPan', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Use the zoomAndPan option instead.\r\n     */\r\n    @Input()\r\n    get zoomingMode(): string {\r\n        return this._getOption('zoomingMode');\r\n    }\r\n    set zoomingMode(value: string) {\r\n        this._setOption('zoomingMode', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when a label on the argument axis is clicked or tapped.\r\n     */\r\n    @Output() onArgumentAxisClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when all series are ready.\r\n     */\r\n    @Output() onDone: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the widget's rendering has finished.\r\n     */\r\n    @Output() onDrawn: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the widget is exported.\r\n     */\r\n    @Output() onExported: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is exported.\r\n     */\r\n    @Output() onExporting: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before a file with exported widget is saved to the user's local storage.\r\n     */\r\n    @Output() onFileSaving: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when an error or warning occurs.\r\n     */\r\n    @Output() onIncidentOccurred: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a legend item is clicked or tapped.\r\n     */\r\n    @Output() onLegendClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is clicked or tapped.\r\n     */\r\n    @Output() onPointClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series point.\r\n     */\r\n    @Output() onPointHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series point is selected or selection is canceled.\r\n     */\r\n    @Output() onPointSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is clicked or tapped.\r\n     */\r\n    @Output() onSeriesClick: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after the pointer enters or leaves a series.\r\n     */\r\n    @Output() onSeriesHoverChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a series is selected or selection is canceled.\r\n     */\r\n    @Output() onSeriesSelectionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip becomes hidden.\r\n     */\r\n    @Output() onTooltipHidden: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when a tooltip appears.\r\n     */\r\n    @Output() onTooltipShown: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when zooming or panning ends.\r\n     */\r\n    @Output() onZoomEnd: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when zooming or panning begins.\r\n     */\r\n    @Output() onZoomStart: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() adaptiveLayoutChange: EventEmitter<{ height?: number, keepLabels?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() adjustOnZoomChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() animationChange: EventEmitter<boolean | { duration?: number, easing?: string, enabled?: boolean, maxPointCountSupported?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() annotationsChange: EventEmitter<Array<DevExpress.viz.dxChartAnnotationConfig | any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() argumentAxisChange: EventEmitter<{ aggregationGroupWidth?: number, aggregationInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, allowDecimals?: boolean, argumentType?: string, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, holidays?: Array<Date | string | number>, hoverMode?: string, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, opacity?: number, placeholderSize?: number, position?: string, singleWorkdays?: Array<Date | string | number>, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number, workdaysOnly?: boolean, workWeek?: Array<number> }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() autoHidePointMarkersChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupPaddingChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barGroupWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() barWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonAnnotationSettingsChange: EventEmitter<DevExpress.viz.dxChartCommonAnnotationConfig>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonAxisSettingsChange: EventEmitter<{ allowDecimals?: boolean, breakStyle?: { color?: string, line?: string, width?: number }, color?: string, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, position?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, displayMode?: string, font?: DevExpress.viz.Font, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, maxValueMargin?: number, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minValueMargin?: number, opacity?: number, placeholderSize?: number, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, title?: { alignment?: string, font?: DevExpress.viz.Font, margin?: number, textOverflow?: string, wordWrap?: string }, valueMarginsEnabled?: boolean, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonPaneSettingsChange: EventEmitter<{ backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number } }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() commonSeriesSettingsChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() containerBackgroundColorChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() crosshairChange: EventEmitter<{ color?: string, dashStyle?: string, enabled?: boolean, horizontalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, verticalLine?: boolean | { color?: string, dashStyle?: string, label?: { backgroundColor?: string, customizeText?: Function, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, visible?: boolean }, opacity?: number, visible?: boolean, width?: number }, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeAnnotationChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeLabelChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizePointChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataPrepareSettingsChange: EventEmitter<{ checkTypeForAllData?: boolean, convertToAxisDataType?: boolean, sortingMethod?: boolean | Function }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() dataSourceChange: EventEmitter<DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() defaultPaneChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() equalBarWidthChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() exportChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, fileName?: string, formats?: Array<string>, margin?: number, printingEnabled?: boolean, proxyUrl?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() legendChange: EventEmitter<{ backgroundColor?: string, border?: { color?: string, cornerRadius?: number, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, columnCount?: number, columnItemSpacing?: number, customizeHint?: Function, customizeItems?: Function, customizeText?: Function, font?: DevExpress.viz.Font, horizontalAlignment?: string, hoverMode?: string, itemsAlignment?: string, itemTextPosition?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, markerSize?: number, orientation?: string, paddingLeftRight?: number, paddingTopBottom?: number, position?: string, rowCount?: number, rowItemSpacing?: number, title?: string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string }, text?: string, verticalAlignment?: string }, verticalAlignment?: string, visible?: boolean }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() loadingIndicatorChange: EventEmitter<{ backgroundColor?: string, enabled?: boolean, font?: DevExpress.viz.Font, show?: boolean, text?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() marginChange: EventEmitter<{ bottom?: number, left?: number, right?: number, top?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() maxBubbleSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minBubbleSizeChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() negativesAsZeroesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteChange: EventEmitter<string | Array<string>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() paletteExtensionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() panesChange: EventEmitter<Array<any | { backgroundColor?: string, border?: { bottom?: boolean, color?: string, dashStyle?: string, left?: boolean, opacity?: number, right?: boolean, top?: boolean, visible?: boolean, width?: number }, name?: string }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pathModifiedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() pointSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() redrawOnResizeChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() resolveLabelOverlappingChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rotatedChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollBarChange: EventEmitter<{ color?: string, offset?: number, opacity?: number, position?: string, visible?: boolean, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollingModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesChange: EventEmitter<any | Array<any>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesSelectionModeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() seriesTemplateChange: EventEmitter<{ customizeSeries?: Function, nameField?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() sizeChange: EventEmitter<{ height?: number, width?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() stickyHoveringChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() synchronizeMultiAxesChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() themeChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() titleChange: EventEmitter<string | { font?: DevExpress.viz.Font, horizontalAlignment?: string, margin?: number | { bottom?: number, left?: number, right?: number, top?: number }, placeholderSize?: number, subtitle?: string | { font?: DevExpress.viz.Font, offset?: number, text?: string, textOverflow?: string, wordWrap?: string }, text?: string, textOverflow?: string, verticalAlignment?: string, wordWrap?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tooltipChange: EventEmitter<{ argumentFormat?: DevExpress.ui.format | string, arrowLength?: number, border?: { color?: string, dashStyle?: string, opacity?: number, visible?: boolean, width?: number }, color?: string, container?: Element | JQuery, cornerRadius?: number, customizeTooltip?: Function, enabled?: boolean, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, location?: string, opacity?: number, paddingLeftRight?: number, paddingTopBottom?: number, shadow?: { blur?: number, color?: string, offsetX?: number, offsetY?: number, opacity?: number }, shared?: boolean, zIndex?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() useAggregationChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() valueAxisChange: EventEmitter<Array<any | { allowDecimals?: boolean, autoBreaksEnabled?: boolean, axisDivisionFactor?: number, breaks?: Array<DevExpress.viz.ScaleBreak>, breakStyle?: { color?: string, line?: string, width?: number }, categories?: Array<number | string | Date>, color?: string, constantLines?: Array<any | { color?: string, dashStyle?: string, displayBehindSeries?: boolean, extendAxis?: boolean, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, text?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, value?: Date | number | string, width?: number }>, constantLineStyle?: { color?: string, dashStyle?: string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, position?: string, verticalAlignment?: string, visible?: boolean }, paddingLeftRight?: number, paddingTopBottom?: number, width?: number }, discreteAxisDivisionMode?: string, endOnTick?: boolean, grid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, inverted?: boolean, label?: { alignment?: string, customizeHint?: Function, customizeText?: Function, displayMode?: string, font?: DevExpress.viz.Font, format?: DevExpress.ui.format | string, indentFromAxis?: number, overlappingBehavior?: string, rotationAngle?: number, staggeringSpacing?: number, textOverflow?: string, visible?: boolean, wordWrap?: string }, logarithmBase?: number, max?: Date | number | string, maxAutoBreakCount?: number, maxValueMargin?: number, min?: Date | number | string, minorGrid?: { color?: string, opacity?: number, visible?: boolean, width?: number }, minorTick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, minorTickCount?: number, minorTickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, minValueMargin?: number, minVisualRangeLength?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, multipleAxesSpacing?: number, name?: string, opacity?: number, pane?: string, placeholderSize?: number, position?: string, showZero?: boolean, strips?: Array<any | { color?: string, endValue?: Date | number | string, label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, text?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number, startValue?: Date | number | string }>, stripStyle?: { label?: { font?: DevExpress.viz.Font, horizontalAlignment?: string, verticalAlignment?: string }, paddingLeftRight?: number, paddingTopBottom?: number }, synchronizedValue?: number, tick?: { color?: string, length?: number, opacity?: number, shift?: number, visible?: boolean, width?: number }, tickInterval?: number | string | { days?: number, hours?: number, milliseconds?: number, minutes?: number, months?: number, quarters?: number, seconds?: number, weeks?: number, years?: number }, title?: string | { alignment?: string, font?: DevExpress.viz.Font, margin?: number, text?: string, textOverflow?: string, wordWrap?: string }, type?: string, valueMarginsEnabled?: boolean, valueType?: string, visible?: boolean, visualRange?: DevExpress.viz.VizRange | Array<number | string | Date>, visualRangeUpdateMode?: string, wholeRange?: DevExpress.viz.VizRange | Array<number | string | Date>, width?: number }>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomAndPanChange: EventEmitter<{ allowMouseWheel?: boolean, allowTouchGestures?: boolean, argumentAxis?: string, dragBoxStyle?: { color?: string, opacity?: number }, dragToZoom?: boolean, panKey?: string, valueAxis?: string }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() zoomingModeChange: EventEmitter<string>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiAnnotationComponent)\r\n    get annotationsChildren(): QueryList<DxiAnnotationComponent> {\r\n        return this._getOption('annotations');\r\n    }\r\n    set annotationsChildren(value) {\r\n        this.setChildren('annotations', value);\r\n    }\r\n\r\n    @ContentChildren(DxiPaneComponent)\r\n    get panesChildren(): QueryList<DxiPaneComponent> {\r\n        return this._getOption('panes');\r\n    }\r\n    set panesChildren(value) {\r\n        this.setChildren('panes', value);\r\n    }\r\n\r\n    @ContentChildren(DxiSeriesComponent)\r\n    get seriesChildren(): QueryList<DxiSeriesComponent> {\r\n        return this._getOption('series');\r\n    }\r\n    set seriesChildren(value) {\r\n        this.setChildren('series', value);\r\n    }\r\n\r\n    @ContentChildren(DxiValueAxisComponent)\r\n    get valueAxisChildren(): QueryList<DxiValueAxisComponent> {\r\n        return this._getOption('valueAxis');\r\n    }\r\n    set valueAxisChildren(value) {\r\n        this.setChildren('valueAxis', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'argumentAxisClick', emit: 'onArgumentAxisClick' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'done', emit: 'onDone' },\r\n            { subscribe: 'drawn', emit: 'onDrawn' },\r\n            { subscribe: 'exported', emit: 'onExported' },\r\n            { subscribe: 'exporting', emit: 'onExporting' },\r\n            { subscribe: 'fileSaving', emit: 'onFileSaving' },\r\n            { subscribe: 'incidentOccurred', emit: 'onIncidentOccurred' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'legendClick', emit: 'onLegendClick' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'pointClick', emit: 'onPointClick' },\r\n            { subscribe: 'pointHoverChanged', emit: 'onPointHoverChanged' },\r\n            { subscribe: 'pointSelectionChanged', emit: 'onPointSelectionChanged' },\r\n            { subscribe: 'seriesClick', emit: 'onSeriesClick' },\r\n            { subscribe: 'seriesHoverChanged', emit: 'onSeriesHoverChanged' },\r\n            { subscribe: 'seriesSelectionChanged', emit: 'onSeriesSelectionChanged' },\r\n            { subscribe: 'tooltipHidden', emit: 'onTooltipHidden' },\r\n            { subscribe: 'tooltipShown', emit: 'onTooltipShown' },\r\n            { subscribe: 'zoomEnd', emit: 'onZoomEnd' },\r\n            { subscribe: 'zoomStart', emit: 'onZoomStart' },\r\n            { emit: 'adaptiveLayoutChange' },\r\n            { emit: 'adjustOnZoomChange' },\r\n            { emit: 'animationChange' },\r\n            { emit: 'annotationsChange' },\r\n            { emit: 'argumentAxisChange' },\r\n            { emit: 'autoHidePointMarkersChange' },\r\n            { emit: 'barGroupPaddingChange' },\r\n            { emit: 'barGroupWidthChange' },\r\n            { emit: 'barWidthChange' },\r\n            { emit: 'commonAnnotationSettingsChange' },\r\n            { emit: 'commonAxisSettingsChange' },\r\n            { emit: 'commonPaneSettingsChange' },\r\n            { emit: 'commonSeriesSettingsChange' },\r\n            { emit: 'containerBackgroundColorChange' },\r\n            { emit: 'crosshairChange' },\r\n            { emit: 'customizeAnnotationChange' },\r\n            { emit: 'customizeLabelChange' },\r\n            { emit: 'customizePointChange' },\r\n            { emit: 'dataPrepareSettingsChange' },\r\n            { emit: 'dataSourceChange' },\r\n            { emit: 'defaultPaneChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'equalBarWidthChange' },\r\n            { emit: 'exportChange' },\r\n            { emit: 'legendChange' },\r\n            { emit: 'loadingIndicatorChange' },\r\n            { emit: 'marginChange' },\r\n            { emit: 'maxBubbleSizeChange' },\r\n            { emit: 'minBubbleSizeChange' },\r\n            { emit: 'negativesAsZeroesChange' },\r\n            { emit: 'paletteChange' },\r\n            { emit: 'paletteExtensionModeChange' },\r\n            { emit: 'panesChange' },\r\n            { emit: 'pathModifiedChange' },\r\n            { emit: 'pointSelectionModeChange' },\r\n            { emit: 'redrawOnResizeChange' },\r\n            { emit: 'resolveLabelOverlappingChange' },\r\n            { emit: 'rotatedChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'scrollBarChange' },\r\n            { emit: 'scrollingModeChange' },\r\n            { emit: 'seriesChange' },\r\n            { emit: 'seriesSelectionModeChange' },\r\n            { emit: 'seriesTemplateChange' },\r\n            { emit: 'sizeChange' },\r\n            { emit: 'stickyHoveringChange' },\r\n            { emit: 'synchronizeMultiAxesChange' },\r\n            { emit: 'themeChange' },\r\n            { emit: 'titleChange' },\r\n            { emit: 'tooltipChange' },\r\n            { emit: 'useAggregationChange' },\r\n            { emit: 'valueAxisChange' },\r\n            { emit: 'zoomAndPanChange' },\r\n            { emit: 'zoomingModeChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxChart(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('annotations', changes);\r\n        this.setupChanges('dataSource', changes);\r\n        this.setupChanges('palette', changes);\r\n        this.setupChanges('panes', changes);\r\n        this.setupChanges('series', changes);\r\n        this.setupChanges('valueAxis', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('annotations');\r\n        this._idh.doCheck('dataSource');\r\n        this._idh.doCheck('palette');\r\n        this._idh.doCheck('panes');\r\n        this._idh.doCheck('series');\r\n        this._idh.doCheck('valueAxis');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxoAggregationIntervalModule,\r\n    DxiBreakModule,\r\n    DxoBreakStyleModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoTitleModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonPaneSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAggregationModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoHeightModule,\r\n    DxoUrlModule,\r\n    DxoWidthModule,\r\n    DxoSelectionStyleModule,\r\n    DxoReductionModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoBubbleModule,\r\n    DxoCandlestickModule,\r\n    DxoFullstackedareaModule,\r\n    DxoFullstackedbarModule,\r\n    DxoFullstackedlineModule,\r\n    DxoFullstackedsplineModule,\r\n    DxoFullstackedsplineareaModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoRangeareaModule,\r\n    DxoRangebarModule,\r\n    DxoScatterModule,\r\n    DxoSplineModule,\r\n    DxoSplineareaModule,\r\n    DxoStackedareaModule,\r\n    DxoStackedbarModule,\r\n    DxoStackedlineModule,\r\n    DxoStackedsplineModule,\r\n    DxoStackedsplineareaModule,\r\n    DxoStepareaModule,\r\n    DxoSteplineModule,\r\n    DxoStockModule,\r\n    DxoCrosshairModule,\r\n    DxoHorizontalLineModule,\r\n    DxoVerticalLineModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiPaneModule,\r\n    DxoScrollBarModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxiValueAxisModule,\r\n    DxoZoomAndPanModule,\r\n    DxoDragBoxStyleModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxChartComponent\r\n  ],\r\n  exports: [\r\n    DxChartComponent,\r\n    DxoAdaptiveLayoutModule,\r\n    DxoAnimationModule,\r\n    DxiAnnotationModule,\r\n    DxoBorderModule,\r\n    DxoFontModule,\r\n    DxoImageModule,\r\n    DxoShadowModule,\r\n    DxoArgumentAxisModule,\r\n    DxoAggregationIntervalModule,\r\n    DxiBreakModule,\r\n    DxoBreakStyleModule,\r\n    DxiConstantLineModule,\r\n    DxoLabelModule,\r\n    DxoConstantLineStyleModule,\r\n    DxoGridModule,\r\n    DxoFormatModule,\r\n    DxoMinorGridModule,\r\n    DxoMinorTickModule,\r\n    DxoMinorTickIntervalModule,\r\n    DxoMinVisualRangeLengthModule,\r\n    DxiStripModule,\r\n    DxoStripStyleModule,\r\n    DxoTickModule,\r\n    DxoTickIntervalModule,\r\n    DxoTitleModule,\r\n    DxoCommonAnnotationSettingsModule,\r\n    DxoCommonAxisSettingsModule,\r\n    DxoCommonPaneSettingsModule,\r\n    DxoCommonSeriesSettingsModule,\r\n    DxoAggregationModule,\r\n    DxoAreaModule,\r\n    DxoHoverStyleModule,\r\n    DxoHatchingModule,\r\n    DxoConnectorModule,\r\n    DxoPointModule,\r\n    DxoHeightModule,\r\n    DxoUrlModule,\r\n    DxoWidthModule,\r\n    DxoSelectionStyleModule,\r\n    DxoReductionModule,\r\n    DxoValueErrorBarModule,\r\n    DxoBarModule,\r\n    DxoBubbleModule,\r\n    DxoCandlestickModule,\r\n    DxoFullstackedareaModule,\r\n    DxoFullstackedbarModule,\r\n    DxoFullstackedlineModule,\r\n    DxoFullstackedsplineModule,\r\n    DxoFullstackedsplineareaModule,\r\n    DxoArgumentFormatModule,\r\n    DxoLineModule,\r\n    DxoRangeareaModule,\r\n    DxoRangebarModule,\r\n    DxoScatterModule,\r\n    DxoSplineModule,\r\n    DxoSplineareaModule,\r\n    DxoStackedareaModule,\r\n    DxoStackedbarModule,\r\n    DxoStackedlineModule,\r\n    DxoStackedsplineModule,\r\n    DxoStackedsplineareaModule,\r\n    DxoStepareaModule,\r\n    DxoSteplineModule,\r\n    DxoStockModule,\r\n    DxoCrosshairModule,\r\n    DxoHorizontalLineModule,\r\n    DxoVerticalLineModule,\r\n    DxoDataPrepareSettingsModule,\r\n    DxoExportModule,\r\n    DxoLegendModule,\r\n    DxoMarginModule,\r\n    DxoSubtitleModule,\r\n    DxoLoadingIndicatorModule,\r\n    DxiPaneModule,\r\n    DxoScrollBarModule,\r\n    DxiSeriesModule,\r\n    DxoSeriesTemplateModule,\r\n    DxoSizeModule,\r\n    DxoTooltipModule,\r\n    DxiValueAxisModule,\r\n    DxoZoomAndPanModule,\r\n    DxoDragBoxStyleModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxChartModule { }\r\n"]}