"use strict";
var ɵngcc0 = require('@angular/core');
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*!
 * devextreme-angular
 * Version: 19.1.11
 * Build date: Fri May 15 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxoLoadPanelComponent = (function (_super) {
    __extends(DxoLoadPanelComponent, _super);
    function DxoLoadPanelComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoLoadPanelComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "height", {
        get: function () {
            return this._getOption('height');
        },
        set: function (value) {
            this._setOption('height', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "indicatorSrc", {
        get: function () {
            return this._getOption('indicatorSrc');
        },
        set: function (value) {
            this._setOption('indicatorSrc', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "shading", {
        get: function () {
            return this._getOption('shading');
        },
        set: function (value) {
            this._setOption('shading', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "shadingColor", {
        get: function () {
            return this._getOption('shadingColor');
        },
        set: function (value) {
            this._setOption('shadingColor', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "showIndicator", {
        get: function () {
            return this._getOption('showIndicator');
        },
        set: function (value) {
            this._setOption('showIndicator', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "showPane", {
        get: function () {
            return this._getOption('showPane');
        },
        set: function (value) {
            this._setOption('showPane', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "text", {
        get: function () {
            return this._getOption('text');
        },
        set: function (value) {
            this._setOption('text', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoLoadPanelComponent.prototype, "_optionPath", {
        get: function () {
            return 'loadPanel';
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    DxoLoadPanelComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },
    ]; };
    DxoLoadPanelComponent.propDecorators = {
        "enabled": [{ type: core_1.Input },],
        "height": [{ type: core_1.Input },],
        "indicatorSrc": [{ type: core_1.Input },],
        "shading": [{ type: core_1.Input },],
        "shadingColor": [{ type: core_1.Input },],
        "showIndicator": [{ type: core_1.Input },],
        "showPane": [{ type: core_1.Input },],
        "text": [{ type: core_1.Input },],
        "width": [{ type: core_1.Input },],
    };
DxoLoadPanelComponent.ɵfac = function DxoLoadPanelComponent_Factory(t) { return new (t || DxoLoadPanelComponent)(ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 1)); };
DxoLoadPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoLoadPanelComponent, selectors: [["dxo-load-panel"]], inputs: { enabled: "enabled", height: "height", indicatorSrc: "indicatorSrc", shading: "shading", shadingColor: "shadingColor", showIndicator: "showIndicator", showPane: "showPane", text: "text", width: "width" }, features: [ɵngcc0.ɵɵProvidersFeature([nested_option_1.NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoLoadPanelComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoLoadPanelComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'dxo-load-panel',
                template: '',
                styles: [''],
                providers: [nested_option_1.NestedOptionHost]
            }]
    }], function () { return [{ type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.SkipSelf
            }, {
                type: core_1.Host
            }] }, { type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.Host
            }] }]; }, { enabled: [{
            type: core_1.Input
        }], height: [{
            type: core_1.Input
        }], indicatorSrc: [{
            type: core_1.Input
        }], shading: [{
            type: core_1.Input
        }], shadingColor: [{
            type: core_1.Input
        }], showIndicator: [{
            type: core_1.Input
        }], showPane: [{
            type: core_1.Input
        }], text: [{
            type: core_1.Input
        }], width: [{
            type: core_1.Input
        }] }); })();
    return DxoLoadPanelComponent;
}(nested_option_2.NestedOption));
exports.DxoLoadPanelComponent = DxoLoadPanelComponent;
var DxoLoadPanelModule = (function () {
    function DxoLoadPanelModule() {
    }
DxoLoadPanelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoLoadPanelModule });
DxoLoadPanelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoLoadPanelModule_Factory(t) { return new (t || DxoLoadPanelModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoLoadPanelModule, { declarations: [DxoLoadPanelComponent], exports: [DxoLoadPanelComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoLoadPanelModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [
                    DxoLoadPanelComponent
                ],
                exports: [
                    DxoLoadPanelComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoLoadPanelModule;
}());
exports.DxoLoadPanelModule = DxoLoadPanelModule;

//# sourceMappingURL=load-panel.js.map