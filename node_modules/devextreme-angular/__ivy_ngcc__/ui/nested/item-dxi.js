"use strict";
var ɵngcc0 = require('@angular/core');

var _c0 = ["*"];
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*!
 * devextreme-angular
 * Version: 19.1.11
 * Build date: Fri May 15 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var nested_option_1 = require("../../core/nested-option");
var template_host_1 = require("../../core/template-host");
var button_group_item_dxi_1 = require("./base/button-group-item-dxi");
var validation_rule_dxi_1 = require("./validation-rule-dxi");
var tab_dxi_1 = require("./tab-dxi");
var location_dxi_1 = require("./location-dxi");
var DxiItemComponent = (function (_super) {
    __extends(DxiItemComponent, _super);
    function DxiItemComponent(parentOptionHost, optionHost, renderer, document, templateHost, element) {
        var _this = _super.call(this) || this;
        _this.renderer = renderer;
        _this.document = document;
        _this.element = element;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        templateHost.setHost(_this);
        return _this;
    }
    Object.defineProperty(DxiItemComponent.prototype, "_optionPath", {
        get: function () {
            return 'items';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "itemsChildren", {
        get: function () {
            return this._getOption('items');
        },
        set: function (value) {
            this.setChildren('items', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "validationRulesChildren", {
        get: function () {
            return this._getOption('validationRules');
        },
        set: function (value) {
            this.setChildren('validationRules', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "tabsChildren", {
        get: function () {
            return this._getOption('tabs');
        },
        set: function (value) {
            this.setChildren('tabs', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiItemComponent.prototype, "locationChildren", {
        get: function () {
            return this._getOption('location');
        },
        set: function (value) {
            this.setChildren('location', value);
        },
        enumerable: true,
        configurable: true
    });
    DxiItemComponent.prototype.setTemplate = function (template) {
        this.template = template;
    };
    DxiItemComponent.prototype.ngAfterViewInit = function () {
        nested_option_1.extractTemplate(this, this.element, this.renderer, this.document);
    };
    /** @nocollapse */
    DxiItemComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },
        { type: core_1.Renderer2, },
        { type: undefined, decorators: [{ type: core_1.Inject, args: [common_1.DOCUMENT,] },] },
        { type: template_host_1.DxTemplateHost, decorators: [{ type: core_1.Host },] },
        { type: core_1.ElementRef, },
    ]; };
    DxiItemComponent.propDecorators = {
        "itemsChildren": [{ type: core_1.ContentChildren, args: [core_1.forwardRef(function () { return DxiItemComponent; }),] },],
        "validationRulesChildren": [{ type: core_1.ContentChildren, args: [core_1.forwardRef(function () { return validation_rule_dxi_1.DxiValidationRuleComponent; }),] },],
        "tabsChildren": [{ type: core_1.ContentChildren, args: [core_1.forwardRef(function () { return tab_dxi_1.DxiTabComponent; }),] },],
        "locationChildren": [{ type: core_1.ContentChildren, args: [core_1.forwardRef(function () { return location_dxi_1.DxiLocationComponent; }),] },],
    };
DxiItemComponent.ɵfac = function DxiItemComponent_Factory(t) { return new (t || DxiItemComponent)(ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(common_1.DOCUMENT), ɵngcc0.ɵɵdirectiveInject(template_host_1.DxTemplateHost, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DxiItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiItemComponent, selectors: [["dxi-item"]], contentQueries: function DxiItemComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, DxiItemComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, validation_rule_dxi_1.DxiValidationRuleComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, tab_dxi_1.DxiTabComponent, false);
        ɵngcc0.ɵɵcontentQuery(dirIndex, location_dxi_1.DxiLocationComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.validationRulesChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabsChildren = _t);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.locationChildren = _t);
    } }, inputs: { disabled: "disabled", html: "html", icon: "icon", template: "template", text: "text", title: "title", visible: "visible", onClick: "onClick", type: "type", baseSize: "baseSize", box: "box", ratio: "ratio", shrink: "shrink", hint: "hint", beginGroup: "beginGroup", closeMenuOnClick: "closeMenuOnClick", items: "items", selectable: "selectable", selected: "selected", colSpan: "colSpan", cssClass: "cssClass", dataField: "dataField", editorOptions: "editorOptions", editorType: "editorType", helpText: "helpText", isRequired: "isRequired", itemType: "itemType", label: "label", name: "name", validationRules: "validationRules", visibleIndex: "visibleIndex", alignItemLabels: "alignItemLabels", caption: "caption", colCount: "colCount", colCountByScreen: "colCountByScreen", tabPanelOptions: "tabPanelOptions", tabs: "tabs", badge: "badge", tabTemplate: "tabTemplate", alignment: "alignment", buttonOptions: "buttonOptions", horizontalAlignment: "horizontalAlignment", verticalAlignment: "verticalAlignment", imageAlt: "imageAlt", imageSrc: "imageSrc", formatName: "formatName", formatValues: "formatValues", locateInMenu: "locateInMenu", location: "location", menuItemTemplate: "menuItemTemplate", options: "options", showText: "showText", widget: "widget", key: "key", showChevron: "showChevron", menuTemplate: "menuTemplate", heightRatio: "heightRatio", widthRatio: "widthRatio", expanded: "expanded", hasItems: "hasItems", parentId: "parentId" }, features: [ɵngcc0.ɵɵProvidersFeature([nested_option_1.NestedOptionHost, template_host_1.DxTemplateHost]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function DxiItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, styles: ["[_nghost-%COMP%] { display: block; }"] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiItemComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'dxi-item',
                template: '<ng-content></ng-content>',
                styles: [':host { display: block; }'],
                providers: [nested_option_1.NestedOptionHost, template_host_1.DxTemplateHost],
                inputs: [
                    'disabled',
                    'html',
                    'icon',
                    'template',
                    'text',
                    'title',
                    'visible',
                    'onClick',
                    'type',
                    'baseSize',
                    'box',
                    'ratio',
                    'shrink',
                    'hint',
                    'beginGroup',
                    'closeMenuOnClick',
                    'items',
                    'selectable',
                    'selected',
                    'colSpan',
                    'cssClass',
                    'dataField',
                    'editorOptions',
                    'editorType',
                    'helpText',
                    'isRequired',
                    'itemType',
                    'label',
                    'name',
                    'validationRules',
                    'visibleIndex',
                    'alignItemLabels',
                    'caption',
                    'colCount',
                    'colCountByScreen',
                    'tabPanelOptions',
                    'tabs',
                    'badge',
                    'tabTemplate',
                    'alignment',
                    'buttonOptions',
                    'horizontalAlignment',
                    'verticalAlignment',
                    'imageAlt',
                    'imageSrc',
                    'formatName',
                    'formatValues',
                    'locateInMenu',
                    'location',
                    'menuItemTemplate',
                    'options',
                    'showText',
                    'widget',
                    'key',
                    'showChevron',
                    'menuTemplate',
                    'heightRatio',
                    'widthRatio',
                    'expanded',
                    'hasItems',
                    'parentId'
                ]
            }]
    }], function () { return [{ type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.SkipSelf
            }, {
                type: core_1.Host
            }] }, { type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.Host
            }] }, { type: ɵngcc0.Renderer2 }, { type: undefined, decorators: [{
                type: core_1.Inject,
                args: [common_1.DOCUMENT]
            }] }, { type: template_host_1.DxTemplateHost, decorators: [{
                type: core_1.Host
            }] }, { type: ɵngcc0.ElementRef }]; }, { itemsChildren: [{
            type: core_1.ContentChildren,
            args: [core_1.forwardRef(function () { return DxiItemComponent; })]
        }], validationRulesChildren: [{
            type: core_1.ContentChildren,
            args: [core_1.forwardRef(function () { return validation_rule_dxi_1.DxiValidationRuleComponent; })]
        }], tabsChildren: [{
            type: core_1.ContentChildren,
            args: [core_1.forwardRef(function () { return tab_dxi_1.DxiTabComponent; })]
        }], locationChildren: [{
            type: core_1.ContentChildren,
            args: [core_1.forwardRef(function () { return location_dxi_1.DxiLocationComponent; })]
        }] }); })();
    return DxiItemComponent;
}(button_group_item_dxi_1.DxiButtonGroupItem));
exports.DxiItemComponent = DxiItemComponent;
var DxiItemModule = (function () {
    function DxiItemModule() {
    }
DxiItemModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiItemModule });
DxiItemModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiItemModule_Factory(t) { return new (t || DxiItemModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiItemModule, { declarations: [DxiItemComponent], exports: [DxiItemComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiItemModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [
                    DxiItemComponent
                ],
                exports: [
                    DxiItemComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiItemModule;
}());
exports.DxiItemModule = DxiItemModule;

//# sourceMappingURL=item-dxi.js.map