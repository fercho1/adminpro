"use strict";
var ɵngcc0 = require('@angular/core');
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*!
 * devextreme-angular
 * Version: 19.1.11
 * Build date: Fri May 15 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var location_dxi_1 = require("./location-dxi");
var DxiRouteComponent = (function (_super) {
    __extends(DxiRouteComponent, _super);
    function DxiRouteComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxiRouteComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "locations", {
        get: function () {
            return this._getOption('locations');
        },
        set: function (value) {
            this._setOption('locations', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "mode", {
        get: function () {
            return this._getOption('mode');
        },
        set: function (value) {
            this._setOption('mode', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "weight", {
        get: function () {
            return this._getOption('weight');
        },
        set: function (value) {
            this._setOption('weight', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "_optionPath", {
        get: function () {
            return 'routes';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxiRouteComponent.prototype, "locationsChildren", {
        get: function () {
            return this._getOption('locations');
        },
        set: function (value) {
            this.setChildren('locations', value);
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    DxiRouteComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },
    ]; };
    DxiRouteComponent.propDecorators = {
        "color": [{ type: core_1.Input },],
        "locations": [{ type: core_1.Input },],
        "mode": [{ type: core_1.Input },],
        "opacity": [{ type: core_1.Input },],
        "weight": [{ type: core_1.Input },],
        "locationsChildren": [{ type: core_1.ContentChildren, args: [core_1.forwardRef(function () { return location_dxi_1.DxiLocationComponent; }),] },],
    };
DxiRouteComponent.ɵfac = function DxiRouteComponent_Factory(t) { return new (t || DxiRouteComponent)(ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 1)); };
DxiRouteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxiRouteComponent, selectors: [["dxi-route"]], contentQueries: function DxiRouteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, location_dxi_1.DxiLocationComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.locationsChildren = _t);
    } }, inputs: { color: "color", locations: "locations", mode: "mode", opacity: "opacity", weight: "weight" }, features: [ɵngcc0.ɵɵProvidersFeature([nested_option_1.NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxiRouteComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiRouteComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'dxi-route',
                template: '',
                styles: [''],
                providers: [nested_option_1.NestedOptionHost]
            }]
    }], function () { return [{ type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.SkipSelf
            }, {
                type: core_1.Host
            }] }, { type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.Host
            }] }]; }, { color: [{
            type: core_1.Input
        }], locations: [{
            type: core_1.Input
        }], mode: [{
            type: core_1.Input
        }], opacity: [{
            type: core_1.Input
        }], weight: [{
            type: core_1.Input
        }], locationsChildren: [{
            type: core_1.ContentChildren,
            args: [core_1.forwardRef(function () { return location_dxi_1.DxiLocationComponent; })]
        }] }); })();
    return DxiRouteComponent;
}(nested_option_2.CollectionNestedOption));
exports.DxiRouteComponent = DxiRouteComponent;
var DxiRouteModule = (function () {
    function DxiRouteModule() {
    }
DxiRouteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxiRouteModule });
DxiRouteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxiRouteModule_Factory(t) { return new (t || DxiRouteModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxiRouteModule, { declarations: [DxiRouteComponent], exports: [DxiRouteComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxiRouteModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [
                    DxiRouteComponent
                ],
                exports: [
                    DxiRouteComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxiRouteModule;
}());
exports.DxiRouteModule = DxiRouteModule;

//# sourceMappingURL=route-dxi.js.map