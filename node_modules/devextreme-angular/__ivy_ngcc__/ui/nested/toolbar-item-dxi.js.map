{"version":3,"file":"toolbar-item-dxi.js","sources":["toolbar-item-dxi.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    ElementRef,\r\n    Renderer2,\r\n    Inject,\r\n    AfterViewInit,\r\n    SkipSelf,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n\r\n\r\nimport { NestedOptionHost, extractTemplate } from '../../core/nested-option';\r\nimport { DxTemplateDirective } from '../../core/template';\r\nimport { IDxTemplateHost, DxTemplateHost } from '../../core/template-host';\r\nimport { CollectionNestedOption } from '../../core/nested-option';\r\n\r\n\r\n@Component({\r\n    selector: 'dxi-toolbar-item',\r\n    template: '<ng-content></ng-content>',\r\n    styles: [':host { display: block; }'],\r\n    providers: [NestedOptionHost, DxTemplateHost]\r\n})\r\nexport class DxiToolbarItemComponent extends CollectionNestedOption implements AfterViewInit, IDxTemplateHost {\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n    @Input()\r\n    get html(): string {\r\n        return this._getOption('html');\r\n    }\r\n    set html(value: string) {\r\n        this._setOption('html', value);\r\n    }\r\n\r\n    @Input()\r\n    get location(): string {\r\n        return this._getOption('location');\r\n    }\r\n    set location(value: string) {\r\n        this._setOption('location', value);\r\n    }\r\n\r\n    @Input()\r\n    get options(): any {\r\n        return this._getOption('options');\r\n    }\r\n    set options(value: any) {\r\n        this._setOption('options', value);\r\n    }\r\n\r\n    @Input()\r\n    get template(): any {\r\n        return this._getOption('template');\r\n    }\r\n    set template(value: any) {\r\n        this._setOption('template', value);\r\n    }\r\n\r\n    @Input()\r\n    get text(): string {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value: string) {\r\n        this._setOption('text', value);\r\n    }\r\n\r\n    @Input()\r\n    get toolbar(): string {\r\n        return this._getOption('toolbar');\r\n    }\r\n    set toolbar(value: string) {\r\n        this._setOption('toolbar', value);\r\n    }\r\n\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n    @Input()\r\n    get widget(): string {\r\n        return this._getOption('widget');\r\n    }\r\n    set widget(value: string) {\r\n        this._setOption('widget', value);\r\n    }\r\n\r\n\r\n    protected get _optionPath() {\r\n        return 'toolbarItems';\r\n    }\r\n\r\n\r\n    constructor(@SkipSelf() @Host() parentOptionHost: NestedOptionHost,\r\n            @Host() optionHost: NestedOptionHost,\r\n            private renderer: Renderer2,\r\n            @Inject(DOCUMENT) private document: any,\r\n            @Host() templateHost: DxTemplateHost,\r\n            private element: ElementRef) {\r\n        super();\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n        templateHost.setHost(this);\r\n    }\r\n\r\n    setTemplate(template: DxTemplateDirective) {\r\n        this.template = template;\r\n    }\r\n    ngAfterViewInit() {\r\n        extractTemplate(this, this.element, this.renderer, this.document);\r\n    }\r\n\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DxiToolbarItemComponent\r\n  ],\r\n  exports: [\r\n    DxiToolbarItemComponent\r\n  ],\r\n})\r\nexport class DxiToolbarItemModule { }\r\n"]}