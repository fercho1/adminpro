"use strict";
var ɵngcc0 = require('@angular/core');
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/*!
 * devextreme-angular
 * Version: 19.1.11
 * Build date: Fri May 15 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var nested_option_1 = require("../../core/nested-option");
var nested_option_2 = require("../../core/nested-option");
var DxoTickIntervalComponent = (function (_super) {
    __extends(DxoTickIntervalComponent, _super);
    function DxoTickIntervalComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoTickIntervalComponent.prototype, "days", {
        get: function () {
            return this._getOption('days');
        },
        set: function (value) {
            this._setOption('days', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "hours", {
        get: function () {
            return this._getOption('hours');
        },
        set: function (value) {
            this._setOption('hours', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "milliseconds", {
        get: function () {
            return this._getOption('milliseconds');
        },
        set: function (value) {
            this._setOption('milliseconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "minutes", {
        get: function () {
            return this._getOption('minutes');
        },
        set: function (value) {
            this._setOption('minutes', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "months", {
        get: function () {
            return this._getOption('months');
        },
        set: function (value) {
            this._setOption('months', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "quarters", {
        get: function () {
            return this._getOption('quarters');
        },
        set: function (value) {
            this._setOption('quarters', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "seconds", {
        get: function () {
            return this._getOption('seconds');
        },
        set: function (value) {
            this._setOption('seconds', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "weeks", {
        get: function () {
            return this._getOption('weeks');
        },
        set: function (value) {
            this._setOption('weeks', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "years", {
        get: function () {
            return this._getOption('years');
        },
        set: function (value) {
            this._setOption('years', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoTickIntervalComponent.prototype, "_optionPath", {
        get: function () {
            return 'tickInterval';
        },
        enumerable: true,
        configurable: true
    });
    /** @nocollapse */
    DxoTickIntervalComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },
    ]; };
    DxoTickIntervalComponent.propDecorators = {
        "days": [{ type: core_1.Input },],
        "hours": [{ type: core_1.Input },],
        "milliseconds": [{ type: core_1.Input },],
        "minutes": [{ type: core_1.Input },],
        "months": [{ type: core_1.Input },],
        "quarters": [{ type: core_1.Input },],
        "seconds": [{ type: core_1.Input },],
        "weeks": [{ type: core_1.Input },],
        "years": [{ type: core_1.Input },],
    };
DxoTickIntervalComponent.ɵfac = function DxoTickIntervalComponent_Factory(t) { return new (t || DxoTickIntervalComponent)(ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 5), ɵngcc0.ɵɵdirectiveInject(nested_option_1.NestedOptionHost, 1)); };
DxoTickIntervalComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DxoTickIntervalComponent, selectors: [["dxo-tick-interval"]], inputs: { days: "days", hours: "hours", milliseconds: "milliseconds", minutes: "minutes", months: "months", quarters: "quarters", seconds: "seconds", weeks: "weeks", years: "years" }, features: [ɵngcc0.ɵɵProvidersFeature([nested_option_1.NestedOptionHost]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function DxoTickIntervalComponent_Template(rf, ctx) { }, styles: [""] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoTickIntervalComponent, [{
        type: core_1.Component,
        args: [{
                selector: 'dxo-tick-interval',
                template: '',
                styles: [''],
                providers: [nested_option_1.NestedOptionHost]
            }]
    }], function () { return [{ type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.SkipSelf
            }, {
                type: core_1.Host
            }] }, { type: nested_option_1.NestedOptionHost, decorators: [{
                type: core_1.Host
            }] }]; }, { days: [{
            type: core_1.Input
        }], hours: [{
            type: core_1.Input
        }], milliseconds: [{
            type: core_1.Input
        }], minutes: [{
            type: core_1.Input
        }], months: [{
            type: core_1.Input
        }], quarters: [{
            type: core_1.Input
        }], seconds: [{
            type: core_1.Input
        }], weeks: [{
            type: core_1.Input
        }], years: [{
            type: core_1.Input
        }] }); })();
    return DxoTickIntervalComponent;
}(nested_option_2.NestedOption));
exports.DxoTickIntervalComponent = DxoTickIntervalComponent;
var DxoTickIntervalModule = (function () {
    function DxoTickIntervalModule() {
    }
DxoTickIntervalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DxoTickIntervalModule });
DxoTickIntervalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DxoTickIntervalModule_Factory(t) { return new (t || DxoTickIntervalModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DxoTickIntervalModule, { declarations: [DxoTickIntervalComponent], exports: [DxoTickIntervalComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DxoTickIntervalModule, [{
        type: core_1.NgModule,
        args: [{
                declarations: [
                    DxoTickIntervalComponent
                ],
                exports: [
                    DxoTickIntervalComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return DxoTickIntervalModule;
}());
exports.DxoTickIntervalModule = DxoTickIntervalModule;

//# sourceMappingURL=tick-interval.js.map