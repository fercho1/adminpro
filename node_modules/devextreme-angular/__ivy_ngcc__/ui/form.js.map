{"version":3,"file":"form.js","sources":["form.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { TransferState } from '@angular/platform-browser';\r\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges,\r\n    ContentChildren,\r\n    QueryList\r\n} from '@angular/core';\r\n\r\n\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\n\r\nimport DxForm from 'devextreme/ui/form';\r\n\r\n\r\nimport { DxComponent } from '../core/component';\r\nimport { DxTemplateHost } from '../core/template-host';\r\nimport { DxIntegrationModule } from '../core/integration';\r\nimport { DxTemplateModule } from '../core/template';\r\nimport { NestedOptionHost } from '../core/nested-option';\r\nimport { WatcherHelper } from '../core/watcher-helper';\r\nimport { IterableDifferHelper } from '../core/iterable-differ-helper';\r\n\r\nimport { DxoColCountByScreenModule } from './nested/col-count-by-screen';\r\nimport { DxiItemModule } from './nested/item-dxi';\r\nimport { DxoLabelModule } from './nested/label';\r\nimport { DxiValidationRuleModule } from './nested/validation-rule-dxi';\r\nimport { DxoTabPanelOptionsModule } from './nested/tab-panel-options';\r\nimport { DxiTabModule } from './nested/tab-dxi';\r\nimport { DxoButtonOptionsModule } from './nested/button-options';\r\n\r\nimport { DxiItemComponent } from './nested/item-dxi';\r\n\r\n\r\n\r\n\r\n/**\r\n * The Form widget represents fields of a data object as a collection of label-editor pairs. These pairs can be arranged in several groups, tabs and columns.\r\n */\r\n@Component({\r\n    selector: 'dx-form',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxFormComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxForm;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the widget.\r\n     */\r\n    @Input()\r\n    get accessKey(): string {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the widget changes its state when interacting with a user.\r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not all root item labels are aligned.\r\n     */\r\n    @Input()\r\n    get alignItemLabels(): boolean {\r\n        return this._getOption('alignItemLabels');\r\n    }\r\n    set alignItemLabels(value: boolean) {\r\n        this._setOption('alignItemLabels', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not item labels in all groups are aligned.\r\n     */\r\n    @Input()\r\n    get alignItemLabelsInAllGroups(): boolean {\r\n        return this._getOption('alignItemLabelsInAllGroups');\r\n    }\r\n    set alignItemLabelsInAllGroups(value: boolean) {\r\n        this._setOption('alignItemLabelsInAllGroups', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The count of columns in the form layout.\r\n     */\r\n    @Input()\r\n    get colCount(): number | string {\r\n        return this._getOption('colCount');\r\n    }\r\n    set colCount(value: number | string) {\r\n        this._setOption('colCount', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies dependency between the screen factor and the count of columns in the form layout.\r\n     */\r\n    @Input()\r\n    get colCountByScreen(): { lg?: number, md?: number, sm?: number, xs?: number } {\r\n        return this._getOption('colCountByScreen');\r\n    }\r\n    set colCountByScreen(value: { lg?: number, md?: number, sm?: number, xs?: number }) {\r\n        this._setOption('colCountByScreen', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a function that customizes a form item after it has been created.\r\n     */\r\n    @Input()\r\n    get customizeItem(): Function {\r\n        return this._getOption('customizeItem');\r\n    }\r\n    set customizeItem(value: Function) {\r\n        this._setOption('customizeItem', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget responds to user interaction.\r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the attributes to be attached to the widget's root element.\r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget can be focused using keyboard navigation.\r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Provides the Form's data. Gets updated every time form fields change.\r\n     */\r\n    @Input()\r\n    get formData(): any {\r\n        return this._getOption('formData');\r\n    }\r\n    set formData(value: any) {\r\n        this._setOption('formData', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's height.\r\n     */\r\n    @Input()\r\n    get height(): number | Function | string {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the widget.\r\n     */\r\n    @Input()\r\n    get hint(): string {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget changes its state when a user pauses on it.\r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Holds an array of form items.\r\n     */\r\n    @Input()\r\n    get items(): Array<DevExpress.ui.dxFormSimpleItem | DevExpress.ui.dxFormGroupItem | DevExpress.ui.dxFormTabbedItem | DevExpress.ui.dxFormEmptyItem | DevExpress.ui.dxFormButtonItem> {\r\n        return this._getOption('items');\r\n    }\r\n    set items(value: Array<DevExpress.ui.dxFormSimpleItem | DevExpress.ui.dxFormGroupItem | DevExpress.ui.dxFormTabbedItem | DevExpress.ui.dxFormEmptyItem | DevExpress.ui.dxFormButtonItem>) {\r\n        this._setOption('items', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the location of a label against the editor.\r\n     */\r\n    @Input()\r\n    get labelLocation(): string {\r\n        return this._getOption('labelLocation');\r\n    }\r\n    set labelLocation(value: string) {\r\n        this._setOption('labelLocation', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The minimum column width used for calculating column count in the form layout.\r\n     */\r\n    @Input()\r\n    get minColWidth(): number {\r\n        return this._getOption('minColWidth');\r\n    }\r\n    set minColWidth(value: number) {\r\n        this._setOption('minColWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The text displayed for optional fields.\r\n     */\r\n    @Input()\r\n    get optionalMark(): string {\r\n        return this._getOption('optionalMark');\r\n    }\r\n    set optionalMark(value: string) {\r\n        this._setOption('optionalMark', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether all editors on the form are read-only. Applies only to non-templated items.\r\n     */\r\n    @Input()\r\n    get readOnly(): boolean {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value: boolean) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * The text displayed for required fields.\r\n     */\r\n    @Input()\r\n    get requiredMark(): string {\r\n        return this._getOption('requiredMark');\r\n    }\r\n    set requiredMark(value: string) {\r\n        this._setOption('requiredMark', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the message that is shown for end-users if a required field value is not specified.\r\n     */\r\n    @Input()\r\n    get requiredMessage(): string {\r\n        return this._getOption('requiredMessage');\r\n    }\r\n    set requiredMessage(value: string) {\r\n        this._setOption('requiredMessage', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the widget to a right-to-left representation.\r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a function that categorizes screens by their width.\r\n     */\r\n    @Input()\r\n    get screenByWidth(): Function {\r\n        return this._getOption('screenByWidth');\r\n    }\r\n    set screenByWidth(value: Function) {\r\n        this._setOption('screenByWidth', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * A Boolean value specifying whether to enable or disable form scrolling.\r\n     */\r\n    @Input()\r\n    get scrollingEnabled(): boolean {\r\n        return this._getOption('scrollingEnabled');\r\n    }\r\n    set scrollingEnabled(value: boolean) {\r\n        this._setOption('scrollingEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not a colon is displayed at the end of form labels.\r\n     */\r\n    @Input()\r\n    get showColonAfterLabel(): boolean {\r\n        return this._getOption('showColonAfterLabel');\r\n    }\r\n    set showColonAfterLabel(value: boolean) {\r\n        this._setOption('showColonAfterLabel', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the optional mark is displayed for optional fields.\r\n     */\r\n    @Input()\r\n    get showOptionalMark(): boolean {\r\n        return this._getOption('showOptionalMark');\r\n    }\r\n    set showOptionalMark(value: boolean) {\r\n        this._setOption('showOptionalMark', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the required mark is displayed for required fields.\r\n     */\r\n    @Input()\r\n    get showRequiredMark(): boolean {\r\n        return this._getOption('showRequiredMark');\r\n    }\r\n    set showRequiredMark(value: boolean) {\r\n        this._setOption('showRequiredMark', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether or not the total validation summary is displayed on the form.\r\n     */\r\n    @Input()\r\n    get showValidationSummary(): boolean {\r\n        return this._getOption('showValidationSummary');\r\n    }\r\n    set showValidationSummary(value: boolean) {\r\n        this._setOption('showValidationSummary', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Gives a name to the internal validation group.\r\n     */\r\n    @Input()\r\n    get validationGroup(): string {\r\n        return this._getOption('validationGroup');\r\n    }\r\n    set validationGroup(value: string) {\r\n        this._setOption('validationGroup', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the widget is visible.\r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the widget's width.\r\n     */\r\n    @Input()\r\n    get width(): number | Function | string {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n     * A function that is executed when the widget's content is ready and each time the content is changed.\r\n     */\r\n    @Output() onContentReady: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed before the widget is disposed of.\r\n     */\r\n    @Output() onDisposing: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the Enter key has been pressed while an editor is focused.\r\n     */\r\n    @Output() onEditorEnterKey: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed when the value of a formData object field is changed.\r\n     */\r\n    @Output() onFieldDataChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function used in JavaScript frameworks to save the widget instance.\r\n     */\r\n    @Output() onInitialized: EventEmitter<any>;\r\n\r\n    /**\r\n     * A function that is executed after a widget option is changed.\r\n     */\r\n    @Output() onOptionChanged: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() alignItemLabelsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() alignItemLabelsInAllGroupsChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() colCountChange: EventEmitter<number | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() colCountByScreenChange: EventEmitter<{ lg?: number, md?: number, sm?: number, xs?: number }>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() customizeItemChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() formDataChange: EventEmitter<any>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hintChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() itemsChange: EventEmitter<Array<DevExpress.ui.dxFormSimpleItem | DevExpress.ui.dxFormGroupItem | DevExpress.ui.dxFormTabbedItem | DevExpress.ui.dxFormEmptyItem | DevExpress.ui.dxFormButtonItem>>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() labelLocationChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() minColWidthChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() optionalMarkChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() readOnlyChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() requiredMarkChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() requiredMessageChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() screenByWidthChange: EventEmitter<Function>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() scrollingEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showColonAfterLabelChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showOptionalMarkChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showRequiredMarkChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() showValidationSummaryChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() validationGroupChange: EventEmitter<string>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string>;\r\n\r\n\r\n\r\n\r\n    @ContentChildren(DxiItemComponent)\r\n    get itemsChildren(): QueryList<DxiItemComponent> {\r\n        return this._getOption('items');\r\n    }\r\n    set itemsChildren(value) {\r\n        this.setChildren('items', value);\r\n    }\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'editorEnterKey', emit: 'onEditorEnterKey' },\r\n            { subscribe: 'fieldDataChanged', emit: 'onFieldDataChanged' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'alignItemLabelsChange' },\r\n            { emit: 'alignItemLabelsInAllGroupsChange' },\r\n            { emit: 'colCountChange' },\r\n            { emit: 'colCountByScreenChange' },\r\n            { emit: 'customizeItemChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'formDataChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'labelLocationChange' },\r\n            { emit: 'minColWidthChange' },\r\n            { emit: 'optionalMarkChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'requiredMarkChange' },\r\n            { emit: 'requiredMessageChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'screenByWidthChange' },\r\n            { emit: 'scrollingEnabledChange' },\r\n            { emit: 'showColonAfterLabelChange' },\r\n            { emit: 'showOptionalMarkChange' },\r\n            { emit: 'showRequiredMarkChange' },\r\n            { emit: 'showValidationSummaryChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'validationGroupChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxForm(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('items', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoColCountByScreenModule,\r\n    DxiItemModule,\r\n    DxoLabelModule,\r\n    DxiValidationRuleModule,\r\n    DxoTabPanelOptionsModule,\r\n    DxiTabModule,\r\n    DxoButtonOptionsModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    BrowserTransferStateModule\r\n  ],\r\n  declarations: [\r\n    DxFormComponent\r\n  ],\r\n  exports: [\r\n    DxFormComponent,\r\n    DxoColCountByScreenModule,\r\n    DxiItemModule,\r\n    DxoLabelModule,\r\n    DxiValidationRuleModule,\r\n    DxoTabPanelOptionsModule,\r\n    DxiTabModule,\r\n    DxoButtonOptionsModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxFormModule { }\r\n"]}