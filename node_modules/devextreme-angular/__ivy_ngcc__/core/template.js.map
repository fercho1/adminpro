{"version":3,"file":"template.js","sources":["template.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 19.1.11\n * Build date: Fri May 15 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:use-input-property-decorator */\r\n\r\nimport {\r\n    Directive,\r\n    NgModule,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    Input,\r\n    Renderer2,\r\n    NgZone,\r\n    EmbeddedViewRef\r\n} from '@angular/core';\r\n\r\nimport { DxTemplateHost } from './template-host';\r\nimport { getElement } from './utils';\r\nimport * as events from 'devextreme/events';\r\n\r\nexport const DX_TEMPLATE_WRAPPER_CLASS = 'dx-template-wrapper';\r\n\r\nexport class RenderData {\r\n    model: any;\r\n    index: number;\r\n    container: any;\r\n}\r\n\r\n@Directive({\r\n    selector: '[dxTemplate]'\r\n})\r\nexport class DxTemplateDirective {\r\n    @Input()\r\n    set dxTemplateOf(value) {\r\n        this.name = value;\r\n    };\r\n    name: string;\r\n\r\n    constructor(private templateRef: TemplateRef<any>,\r\n        private viewContainerRef: ViewContainerRef,\r\n        templateHost: DxTemplateHost,\r\n        private renderer: Renderer2,\r\n        private zone: NgZone) {\r\n        templateHost.setTemplate(this);\r\n    }\r\n\r\n    private renderTemplate(renderData: RenderData): EmbeddedViewRef<any> {\r\n        const childView = this.viewContainerRef.createEmbeddedView(this.templateRef, {\r\n            '$implicit': renderData.model,\r\n            index: renderData.index\r\n        });\r\n\r\n        const container = getElement(renderData.container);\r\n        if (renderData.container) {\r\n            childView.rootNodes.forEach((element) => {\r\n                this.renderer.appendChild(container, element);\r\n            });\r\n        }\r\n\r\n        return childView;\r\n    }\r\n\r\n    render(renderData: RenderData) {\r\n        let childView;\r\n        if (this.zone.isStable) {\r\n            childView = this.zone.run(() => {\r\n                return this.renderTemplate(renderData);\r\n            });\r\n        } else {\r\n            childView = this.renderTemplate(renderData);\r\n            // =========== WORKAROUND =============\r\n            // https://github.com/angular/angular/issues/12243\r\n            childView['detectChanges']();\r\n            // =========== /WORKAROUND =============\r\n        }\r\n\r\n        childView.rootNodes.forEach((element) => {\r\n            if (element.nodeType === 1) {\r\n                this.renderer.addClass(element, DX_TEMPLATE_WRAPPER_CLASS);\r\n            }\r\n\r\n            events.one(element, 'dxremove', ({}, params) => {\r\n                if (!params || !params._angularIntegration) {\r\n                    childView.destroy();\r\n                }\r\n            });\r\n        });\r\n\r\n        return childView.rootNodes;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    declarations: [DxTemplateDirective],\r\n    exports: [DxTemplateDirective]\r\n})\r\nexport class DxTemplateModule { }\r\n"]}